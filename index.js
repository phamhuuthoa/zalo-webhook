const express = require('express');
const axios = require('axios');
const app = express();
const port = process.env.PORT || 3000;

// ‚úÖ L·∫•y App ID v√† Secret t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
const APP_ID = process.env.APP_ID;
const APP_SECRET = process.env.APP_SECRET;

// ‚ö†Ô∏è ƒê·ª´ng thay ƒë·ªïi redirect URI n√†y tr·ª´ khi b·∫°n ƒë·ªïi ƒë∆∞·ªùng d·∫´n Render
const REDIRECT_URI = 'https://zalo-webhook-1.onrender.com/callback';
// Trang ch√≠nh
app.get('/', (req, res) => {
  res.send('Zalo Webhook ƒëang ho·∫°t ƒë·ªông. Truy c·∫≠p /auth ƒë·ªÉ l·∫•y token.');
});

// B·∫Øt ƒë·∫ßu x√°c th·ª±c OAuth
app.get('/auth', (req, res) => {
  const authUrl = `https://oauth.zalo.me/auth?app_id=${APP_ID}&redirect_uri=${encodeURIComponent(REDIRECT_URI)}&state=abc&scope=oa.send.update`;
  res.redirect(authUrl);
});

// Nh·∫≠n m√£ code t·ª´ Zalo v√† l·∫•y access_token + refresh_token
app.get('/callback', async (req, res) => {
  const { code } = req.query;
  if (!code) return res.send('‚ùå Kh√¥ng nh·∫≠n ƒë∆∞·ª£c m√£ x√°c th·ª±c (code) t·ª´ Zalo');

  try {
    const tokenRes = await axios.post(`https://oauth.zalo.me/v4/oa/access_token`, {
      code: code,
      app_id: APP_ID,
      app_secret: APP_SECRET,
      grant_type: 'authorization_code',
      redirect_uri: REDIRECT_URI,
    });

    res.send(`
      <h2>‚úÖ Token nh·∫≠n ƒë∆∞·ª£c:</h2>
      <pre>${JSON.stringify(tokenRes.data, null, 2)}</pre>
      <p>B·∫°n h√£y copy <code>access_token</code> v√† <code>refresh_token</code> ƒë·ªÉ d√πng trong Google Sheets ho·∫∑c g·ª≠i tin nh·∫Øn.</p>
    `);
  } catch (err) {
    console.error(err.response?.data || err);
    res.send('‚ùå L·ªói khi g·ªçi API l·∫•y token. Vui l√≤ng ki·ªÉm tra l·∫°i APP_ID, APP_SECRET ho·∫∑c quy·ªÅn truy c·∫≠p.');
  }
});
const path = require('path');
app.get('/zalo_verifierHlgC59djA1PJmPmMkhumINEOWdEVxbGbDJCn.html', (req, res) => {
  res.sendFile(path.join(__dirname, 'zalo_verifierHlgC59djA1PJmPmMkhumINEOWdEVxbGbDJCn.html'));
});

app.listen(port, () => {
  console.log(`üöÄ App ch·∫°y t·∫°i http://localhost:${port}`);
});
